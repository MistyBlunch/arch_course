$date
	Fri Sep 25 23:52:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module demux_1_16_tb $end
$var wire 16 ! s [15:0] $end
$var wire 16 " p [15:0] $end
$var wire 16 # o [15:0] $end
$var wire 16 $ n [15:0] $end
$var wire 16 % m [15:0] $end
$var wire 16 & l [15:0] $end
$var wire 16 ' k [15:0] $end
$var wire 16 ( j [15:0] $end
$var wire 16 ) h [15:0] $end
$var wire 16 * g [15:0] $end
$var wire 16 + f [15:0] $end
$var wire 16 , e [15:0] $end
$var wire 16 - d [15:0] $end
$var wire 16 . c [15:0] $end
$var wire 16 / b [15:0] $end
$var wire 16 0 a [15:0] $end
$var reg 16 1 i [15:0] $end
$var reg 4 2 sel [3:0] $end
$var reg 16 3 z [15:0] $end
$scope module demux_1_16 $end
$var wire 16 4 i [15:0] $end
$var wire 4 5 sel [3:0] $end
$var wire 16 6 tmp2 [15:0] $end
$var wire 16 7 tmp1 [15:0] $end
$var wire 16 8 s [15:0] $end
$var wire 16 9 p [15:0] $end
$var wire 16 : o [15:0] $end
$var wire 16 ; n [15:0] $end
$var wire 16 < m [15:0] $end
$var wire 16 = l [15:0] $end
$var wire 16 > k [15:0] $end
$var wire 16 ? j [15:0] $end
$var wire 16 @ h [15:0] $end
$var wire 16 A g [15:0] $end
$var wire 16 B f [15:0] $end
$var wire 16 C e [15:0] $end
$var wire 16 D d [15:0] $end
$var wire 16 E c [15:0] $end
$var wire 16 F b [15:0] $end
$var wire 16 G a [15:0] $end
$scope module demux_1_2 $end
$var wire 16 H i [15:0] $end
$var wire 1 I sel $end
$var wire 16 J b [15:0] $end
$var wire 16 K a [15:0] $end
$upscope $end
$scope module demux_1_8_a $end
$var wire 16 L i [15:0] $end
$var wire 3 M sel [2:0] $end
$var reg 16 N a [15:0] $end
$var reg 16 O b [15:0] $end
$var reg 16 P c [15:0] $end
$var reg 16 Q d [15:0] $end
$var reg 16 R e [15:0] $end
$var reg 16 S f [15:0] $end
$var reg 16 T g [15:0] $end
$var reg 16 U h [15:0] $end
$upscope $end
$scope module demux_1_8_b $end
$var wire 16 V i [15:0] $end
$var wire 3 W sel [2:0] $end
$var reg 16 X a [15:0] $end
$var reg 16 Y b [15:0] $end
$var reg 16 Z c [15:0] $end
$var reg 16 [ d [15:0] $end
$var reg 16 \ e [15:0] $end
$var reg 16 ] f [15:0] $end
$var reg 16 ^ g [15:0] $end
$var reg 16 _ h [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#80
$dumpvars
b11 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b111 W
b11 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b111 M
b0 L
b0 K
b11 J
1I
b11 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b11 9
b0 8
b0 7
b11 6
b1111 5
b11 4
b10000 3
b1111 2
b11 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b11 "
b0 !
$end
