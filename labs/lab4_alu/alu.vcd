$date
	Mon Nov 16 12:08:07 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 32 ! Result [31:0] $end
$var wire 4 " ALUFlags [3:0] $end
$var reg 3 # ALUControl [2:0] $end
$var reg 4 $ ALUFlags_expected [3:0] $end
$var reg 32 % Result_expected [31:0] $end
$var reg 32 & a [31:0] $end
$var reg 32 ' b [31:0] $end
$var reg 1 ( clk $end
$var reg 32 ) errors [31:0] $end
$var reg 1 * reset $end
$var reg 32 + vectornum [31:0] $end
$scope module al $end
$var wire 3 , ALUControl [2:0] $end
$var wire 1 - C $end
$var wire 1 . V $end
$var wire 32 / a [31:0] $end
$var wire 32 0 b [31:0] $end
$var wire 33 1 sum [32:0] $end
$var wire 32 2 _b [31:0] $end
$var wire 1 3 Z $end
$var wire 32 4 Result [31:0] $end
$var wire 1 5 N $end
$var wire 4 6 ALUFlags [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6
x5
bx 4
x3
bx 2
bx 1
bx 0
bx /
x.
x-
bx ,
b0 +
1*
b0 )
1(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5
0(
#10
05
0.
13
b0 !
b0 4
b110 "
b110 6
1-
b100000000000000000000000000000000 1
b11111111111111111111111111110111 2
b1 #
b1 ,
b1000 &
b1000 /
b1000 '
b1000 0
b0 %
b110 $
1(
#15
0(
#17
0*
#20
1(
#25
b1 +
0(
#30
05
03
b101 !
b101 4
b0 "
b0 6
0-
b0 2
b0 #
b0 ,
b101 1
b101 &
b101 /
b0 '
b0 0
b101 %
b0 $
1(
#35
b10 +
0(
#40
b1100 !
b1100 4
b1100 2
b1100 1
b0 &
b0 /
b1100 '
b1100 0
b1100 %
1(
#45
b11 +
0(
#50
b10 "
b10 6
1-
b11 !
b11 4
b11111111111111111111111111110110 2
b1 #
b1 ,
b100000000000000000000000000000011 1
b1100 &
b1100 /
b1001 '
b1001 0
b11 %
b10 $
1(
#55
b100 +
0(
#60
05
b111 !
b111 4
b0 "
b0 6
0-
b11111111111111111111111111111010 2
b11 #
b11 ,
b11111111111111111111111111111110 1
b11 &
b11 /
b101 '
b101 0
b111 %
b0 $
1(
#65
b101 +
0(
#70
b100 !
b100 4
b111 2
b10 #
b10 ,
b10011 1
b1100 &
b1100 /
b111 '
b111 0
b100 %
1(
#75
b110 +
0(
#80
b1011 !
b1011 4
b0 #
b0 ,
b1011 1
b100 &
b100 /
b1011 %
1(
#85
b111 +
0(
#90
b10 "
b10 6
1-
b1000 !
b1000 4
b11111111111111111111111111111100 2
b1 #
b1 ,
b100000000000000000000000000001000 1
b1011 &
b1011 /
b11 '
b11 0
b1000 %
b10 $
1(
#95
b1000 +
0(
#100
b101 !
b101 4
b11111111111111111111111111111000 2
b100000000000000000000000000000101 1
b1100 &
b1100 /
b111 '
b111 0
b101 %
1(
#105
b1001 +
0(
#110
15
b11111111111111111111111111111110 !
b11111111111111111111111111111110 4
b1000 "
b1000 6
0-
b11111111111111111111111111111010 2
b11111111111111111111111111111110 1
b11 &
b11 /
b101 '
b101 0
b11111111111111111111111111111110 %
b1000 $
1(
#115
b1010 +
0(
#120
05
b1100 !
b1100 4
b0 "
b0 6
0-
b1 2
b0 #
b0 ,
b1100 1
b1011 &
b1011 /
b1 '
b1 0
b1100 %
b0 $
1(
#125
b1011 +
0(
#130
b10 "
b10 6
1-
b111 !
b111 4
b11111111111111111111111111111010 2
b1 #
b1 ,
b100000000000000000000000000000111 1
b1100 &
b1100 /
b101 '
b101 0
b111 %
b10 $
1(
#135
b1100 +
0(
#140
b0 "
b0 6
0-
b1001100 !
b1001100 4
b1000 2
b0 #
b0 ,
b1001100 1
b1000100 &
b1000100 /
b1000 '
b1000 0
b1001100 %
b0 $
1(
#145
b1101 +
0(
